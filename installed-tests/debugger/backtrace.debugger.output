GJS debugger. Type "help" for help
db> # SPDX-License-Identifier: MIT OR LGPL-2.0-or-later
db> # SPDX-FileCopyrightText: 2018 Philip Chimento <philip.chimento@gmail.com>
db> backtrace
#0    toplevel at backtrace.debugger.js:3:0
db> c
Debugger statement, toplevel at backtrace.debugger.js:3:0
db> bt
#0    toplevel at backtrace.debugger.js:3:0
db> c
Debugger statement, <anonymous>([object Array], 0, [object Array]) at backtrace.debugger.js:5:4
db> backtrace full
#0    <anonymous>([object Array], 0, [object Array]) at backtrace.debugger.js:5:4
arguments = [object Arguments]
array = [object Array]
#1    toplevel at backtrace.debugger.js:4:36
db> bt full
#0    <anonymous>([object Array], 0, [object Array]) at backtrace.debugger.js:5:4
arguments = [object Arguments]
array = [object Array]
#1    toplevel at backtrace.debugger.js:4:36
db> where
#0    <anonymous>([object Array], 0, [object Array]) at backtrace.debugger.js:5:4
#1    toplevel at backtrace.debugger.js:4:36
db> c
Debugger statement, <anonymous>(1, 0, [object Array]) at backtrace.debugger.js:7:8
db> # test printing locals when exception is thrown before initialization of a value
db> c
1
Unwinding due to exception. (Type 'c' to continue unwinding.)
#0    mistake([object Array]) at backtrace.debugger.js:14:33
   14	    let {uninitialized_} = array.shift();
Exception value is:
$1 = [object Error]
TypeError: array.shift() is undefined
db> bt full
#0    mistake([object Array]) at backtrace.debugger.js:14:33
uninitialized_ = <uninitialized>
#1    toplevel at backtrace.debugger.js:16:7
db> q
Program exited with code 0
